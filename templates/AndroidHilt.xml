<templateSet group="AndroidHilt">
  <template name="hvm" value="@dagger.hilt.android.lifecycle.HiltViewModel&#10;class $NAME$ @javax.inject.Inject constructor(): ViewModel() {&#10;$END$&#10;}" description="Hilt ViewModel" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
      <option name="KOTLIN_EXPRESSION" value="true" />
      <option name="KOTLIN_STATEMENT" value="true" />
      <option name="KOTLIN_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="useCase" value="class $NAME$ @javax.inject.Inject constructor(private val $DEPENDENCY$Repository: $DEPENDENCY_TYPE$Repository) {&#10;    suspend operator fun invoke() = $DEPENDENCY$Repository.$METHOD$$END$&#10;}" description="Clean Architecture Use Case with Hilt Injection" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="DEPENDENCY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="DEPENDENCY_TYPE" expression="" defaultValue="capitalize(DEPENDENCY)" alwaysStopAt="true" />
    <variable name="METHOD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
      <option name="KOTLIN_EXPRESSION" value="true" />
      <option name="KOTLIN_OBJECT_DECLARATION" value="true" />
      <option name="KOTLIN_STATEMENT" value="true" />
      <option name="KOTLIN_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="ic" value="@Inject constructor($END$)" description="Constructor inject" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
      <option name="KOTLIN_EXPRESSION" value="true" />
      <option name="KOTLIN_STATEMENT" value="true" />
      <option name="KOTLIN_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="hbm" value="import dagger.Binds&#10;import dagger.Module&#10;import dagger.hilt.InstallIn&#10;import dagger.hilt.components.SingletonComponent&#10;&#10;@Module&#10;@InstallIn(SingletonComponent::class)&#10;interface $NAME$ {&#10;    &#10;    @Binds&#10;    fun $METHOD_NAME$(impl: $IMPL$): $INTERFACE$&#10;}" description="Hilt Bind Module" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="IMPL" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="INTERFACE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
      <option name="KOTLIN_EXPRESSION" value="true" />
      <option name="KOTLIN_STATEMENT" value="true" />
      <option name="KOTLIN_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="pv" value="@Provides&#10;fun provide$NAME$($COMP$: $TYPE$): $NAME$ {&#10;    return $NAME$($COMP$$END$)&#10;}" description="Hilt Provides" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="COMP" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="capitalize(COMP)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
      <option name="KOTLIN_EXPRESSION" value="true" />
      <option name="KOTLIN_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ij" value="@Inject&#10;lateinit var $END$" description="lateinit var inject" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="aic" value="@AssistedInject constructor($END$)" description="Assisted Inject constructor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
      <option name="KOTLIN_EXPRESSION" value="true" />
      <option name="KOTLIN_OBJECT_DECLARATION" value="true" />
      <option name="KOTLIN_TOPLEVEL" value="true" />
    </context>
  </template>
</templateSet>